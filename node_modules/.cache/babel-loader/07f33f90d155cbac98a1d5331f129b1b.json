{"ast":null,"code":"import _slicedToArray from \"/Users/brian/Dev/Learning/fcc_quote_machine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brian/Dev/Learning/fcc_quote_machine/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxOpeningElement } from \"@babel/types\";\n\nconst App = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        joke = _useState2[0],\n        setJoke = _useState2[1];\n\n  const fetchJoke = async () => {\n    const res = await fetch(\"https://icanhazdadjoke.com/\", {\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n\n    const data = await res.json();\n    return data;\n  };\n\n  const handleQuote = () => {\n    return fetchJoke().then(data => setJoke(data));\n  };\n\n  const tweetJoke = () => {\n    return null;\n  };\n\n  useEffect(() => {\n    handleQuote();\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Random Quote Machine\")), React.createElement(\"main\", {\n    id: \"quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, joke.joke), React.createElement(\"h2\", {\n    id: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, joke.id), React.createElement(\"button\", {\n    id: \"new-quote\",\n    onClick: () => handleQuote(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"New Quote\"), React.createElement(\"button\", {\n    id: \"tweet-quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Tweet\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/brian/Dev/Learning/fcc_quote_machine/src/App.js"],"names":["React","useState","useEffect","jsxOpeningElement","App","joke","setJoke","fetchJoke","res","fetch","headers","Accept","ok","Error","status","data","json","handleQuote","then","tweetJoke","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACTI,IADS;AAAA,QACHC,OADG;;AAEhB,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACrDC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAD4C,KAAhC,CAAvB;;AAGA,QAAI,CAACH,GAAG,CAACI,EAAT,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAUL,GAAG,CAACM,MAAd,CAAN;AACD;;AACD,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GATD;;AAUA,QAAME,WAAW,GAAG,MAAM;AACxB,WAAOV,SAAS,GAAGW,IAAZ,CAAiBH,IAAI,IAAIT,OAAO,CAACS,IAAD,CAAhC,CAAP;AACD,GAFD;;AAGA,QAAMI,SAAS,GAAG,MAAM;AACtB,WAAO,IAAP;AACD,GAFD;;AAGAjB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,WAAW;AACZ,GAFQ,CAAT;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EAIE;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeZ,IAAI,CAACA,IAApB,CADF,EAEE;AAAI,IAAA,EAAE,EAAC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,IAAI,CAACe,EAAtB,CAFF,EAGE;AAAQ,IAAA,EAAE,EAAC,WAAX;AAAuB,IAAA,OAAO,EAAE,MAAMH,WAAW,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAME;AAAQ,IAAA,EAAE,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CAJF,CADF;AAeD,CApCD;;AAsCA,eAAeb,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { jsxOpeningElement } from \"@babel/types\";\n\nconst App = () => {\n  const [joke, setJoke] = useState(\"\");\n  const fetchJoke = async () => {\n    const res = await fetch(\"https://icanhazdadjoke.com/\", {\n      headers: { Accept: \"application/json\" }\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    const data = await res.json();\n    return data;\n  };\n  const handleQuote = () => {\n    return fetchJoke().then(data => setJoke(data));\n  };\n  const tweetJoke = () => {\n    return null;\n  };\n  useEffect(() => {\n    handleQuote();\n  });\n  return (\n    <div>\n      <header>\n        <h1>Random Quote Machine</h1>\n      </header>\n      <main id=\"quote-box\">\n        <h1 id=\"text\">{joke.joke}</h1>\n        <h2 id=\"author\">{joke.id}</h2>\n        <button id=\"new-quote\" onClick={() => handleQuote()}>\n          New Quote\n        </button>\n        <button id=\"tweet-quote\">Tweet</button>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}