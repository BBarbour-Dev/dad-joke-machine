{"ast":null,"code":"import _slicedToArray from \"/Users/brian/Dev/Learning/fcc_quote_machine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/brian/Dev/Learning/fcc_quote_machine/src/App.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFCCTest from \"react-fcctest\";\n\nconst App = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        joke = _useState2[0],\n        setJoke = _useState2[1];\n\n  const fetchJoke = async () => {\n    const res = await fetch(\"https://icanhazdadjoke.com/\", {\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n\n    const data = await res.json();\n    return data;\n  };\n\n  const handleQuote = useCallback(() => {\n    fetchJoke().then(data => setJoke(data));\n  }, []);\n  useEffect(() => {\n    handleQuote();\n  }, [handleQuote]);\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(ReactFCCTest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"quote-box\",\n    id: \"quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"big-quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u201C\"), joke.joke, React.createElement(\"span\", {\n    className: \"big-quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u201D\")), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button\",\n    id: \"new-quote\",\n    onClick: () => handleQuote(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Ask Dad\"), React.createElement(\"a\", {\n    className: \"button\",\n    id: \"tweet-quote\",\n    href: \"https://twitter.com/intent/tweet?hashtags=dadjokes&related=freecodecamp&text=\".concat(joke.joke),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Tweet\")), React.createElement(\"div\", {\n    className: \"hidey\",\n    id: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, joke.id))), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"dadJokes\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/brian/Dev/Learning/fcc_quote_machine/src/App.js"],"names":["React","useState","useEffect","useCallback","ReactFCCTest","App","joke","setJoke","fetchJoke","res","fetch","headers","Accept","ok","Error","status","data","json","handleQuote","then","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,YAAP,MAAyB,eAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACQJ,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACTK,IADS;AAAA,QACHC,OADG;;AAEhB,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACrDC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAD4C,KAAhC,CAAvB;;AAGA,QAAI,CAACH,GAAG,CAACI,EAAT,EAAa;AACX,YAAM,IAAIC,KAAJ,CAAUL,GAAG,CAACM,MAAd,CAAN;AACD;;AACD,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GATD;;AAUA,QAAME,WAAW,GAAGf,WAAW,CAAC,MAAM;AACpCK,IAAAA,SAAS,GAAGW,IAAZ,CAAiBH,IAAI,IAAIT,OAAO,CAACS,IAAD,CAAhC;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAGAd,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGZ,IAAI,CAACA,IAFR,EAGE;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,OAAO,EAAE,MAAMY,WAAW,EAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAQE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,yFACFZ,IAAI,CAACA,IADH,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CANF,EAwBE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,EAAE,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACc,EADR,CAxBF,CADF,CAFF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAhCF,CADF;AAsCD,CAxDD;;AA0DA,eAAef,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFCCTest from \"react-fcctest\";\n\nconst App = () => {\n  const [joke, setJoke] = useState(\"\");\n  const fetchJoke = async () => {\n    const res = await fetch(\"https://icanhazdadjoke.com/\", {\n      headers: { Accept: \"application/json\" }\n    });\n    if (!res.ok) {\n      throw new Error(res.status);\n    }\n    const data = await res.json();\n    return data;\n  };\n  const handleQuote = useCallback(() => {\n    fetchJoke().then(data => setJoke(data));\n  }, []);\n  useEffect(() => {\n    handleQuote();\n  }, [handleQuote]);\n  return (\n    <div className=\"container\">\n      <ReactFCCTest />\n      <main>\n        <div className=\"quote-box\" id=\"quote-box\">\n          <h1 id=\"text\">\n            <span className=\"big-quote\">&ldquo;</span>\n            {joke.joke}\n            <span className=\"big-quote\">&rdquo;</span>\n          </h1>\n          <div className=\"button-row\">\n            <button\n              className=\"button\"\n              id=\"new-quote\"\n              onClick={() => handleQuote()}\n            >\n              Ask Dad\n            </button>\n            <a\n              className=\"button\"\n              id=\"tweet-quote\"\n              href={`https://twitter.com/intent/tweet?hashtags=dadjokes&related=freecodecamp&text=${\n                joke.joke\n              }`}\n            >\n              Tweet\n            </a>\n          </div>\n          <div className=\"hidey\" id=\"author\">\n            {joke.id}\n          </div>\n        </div>\n      </main>\n      <footer>\n        <h1>dadJokes</h1>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}